<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.YDOnlineTaxi.mapper.FinancialStatisticsMapper">
    
    <resultMap type="FinancialStatistics" id="FinancialStatisticsResult">
        <result property="driverName"    column="driver_name"    />
        <result property="driverPhoneNumber"    column="driver_phone_number"    />
        <result property="totalIncome"    column="total_income"    />
        <result property="monthIncome"    column="month_income"    />
        <result property="unpaidRemuneration"    column="unpaid_remuneration"    />
    </resultMap>

    <sql id="selectFinancialStatisticsVo">
        select driver_name, driver_phone_number, total_income, month_income, unpaid_remuneration from financial_statistics
    </sql>

    <select id="selectFinancialStatisticsList" parameterType="FinancialStatistics" resultMap="FinancialStatisticsResult">
        <include refid="selectFinancialStatisticsVo"/>
        <where>  
            <if test="driverName != null  and driverName != ''"> and driver_name like concat('%', #{driverName}, '%')</if>
            <if test="driverPhoneNumber != null  and driverPhoneNumber != ''"> and driver_phone_number like concat('%', #{driverPhoneNumber}, '%')</if>
            <if test="params.beginTotalIncome != null and params.beginTotalIncome != '' and params.endTotalIncome != null and params.endTotalIncome != ''"> and total_income between #{params.beginTotalIncome} and #{params.endTotalIncome}</if>
            <if test="params.beginMonthIncome != null and params.beginMonthIncome != '' and params.endMonthIncome != null and params.endMonthIncome != ''"> and month_income between #{params.beginMonthIncome} and #{params.endMonthIncome}</if>
            <if test="params.beginUnpaidRemuneration != null and params.beginUnpaidRemuneration != '' and params.endUnpaidRemuneration != null and params.endUnpaidRemuneration != ''"> and unpaid_remuneration between #{params.beginUnpaidRemuneration} and #{params.endUnpaidRemuneration}</if>
        </where>
    </select>
    
    <select id="selectFinancialStatisticsByDriverPhoneNumber" parameterType="String" resultMap="FinancialStatisticsResult">
        <include refid="selectFinancialStatisticsVo"/>
        where driver_phone_number = #{driverPhoneNumber}
    </select>
        
    <insert id="insertFinancialStatistics" parameterType="FinancialStatistics">
        insert into financial_statistics
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="driverName != null and driverName != ''">driver_name,</if>
            <if test="driverPhoneNumber != null and driverPhoneNumber != ''">driver_phone_number,</if>
            <if test="totalIncome != null">total_income,</if>
            <if test="monthIncome != null">month_income,</if>
            <if test="unpaidRemuneration != null">unpaid_remuneration,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="driverName != null and driverName != ''">#{driverName},</if>
            <if test="driverPhoneNumber != null and driverPhoneNumber != ''">#{driverPhoneNumber},</if>
            <if test="totalIncome != null">#{totalIncome},</if>
            <if test="monthIncome != null">#{monthIncome},</if>
            <if test="unpaidRemuneration != null">#{unpaidRemuneration},</if>
         </trim>
    </insert>

    <update id="updateFinancialStatistics" parameterType="FinancialStatistics">
        update financial_statistics
        <trim prefix="SET" suffixOverrides=",">
            <if test="driverName != null and driverName != ''">driver_name = #{driverName},</if>
            <if test="totalIncome != null">total_income = #{totalIncome},</if>
            <if test="monthIncome != null">month_income = #{monthIncome},</if>
            <if test="unpaidRemuneration != null">unpaid_remuneration = #{unpaidRemuneration},</if>
        </trim>
        where driver_phone_number = #{driverPhoneNumber}
    </update>

    <delete id="deleteFinancialStatisticsByDriverPhoneNumber" parameterType="String">
        delete from financial_statistics where driver_phone_number = #{driverPhoneNumber}
    </delete>

    <delete id="deleteFinancialStatisticsByDriverPhoneNumbers" parameterType="String">
        delete from financial_statistics where driver_phone_number in 
        <foreach item="driverPhoneNumber" collection="array" open="(" separator="," close=")">
            #{driverPhoneNumber}
        </foreach>
    </delete>
</mapper>